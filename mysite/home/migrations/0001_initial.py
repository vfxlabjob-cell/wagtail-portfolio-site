# Generated by Django 5.2.6 on 2025-09-22 22:08

import django.db.models.deletion
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0095_groupsitepermission'),
        ('wagtailimages', '0027_image_description'),
    ]

    operations = [
        migrations.CreateModel(
            name='InfoIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('intro', wagtail.fields.RichTextField(blank=True, help_text='Вводный текст для раздела Information Pages.')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='InfoPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('body', wagtail.fields.RichTextField(blank=True, help_text='Основной контент информационной страницы.')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='PortfolioIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('intro', wagtail.fields.RichTextField(blank=True, help_text='Вводный текст для главной страницы портфолио.')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ProjectCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(help_text="A unique, URL-friendly version of the name, e.g., 'web-design'.", max_length=255)),
                ('main_text', wagtail.fields.RichTextField(blank=True, help_text='Главный текст, который будет отображаться при выборе этой категории.')),
                ('secondary_text', wagtail.fields.RichTextField(blank=True, help_text='Второстепенный текст, который будет отображаться при выборе этой категории.')),
                ('seo_title', models.CharField(blank=True, help_text='Optional. The title displayed in search engine results and browser tabs. If empty, the category name will be used.', max_length=255)),
                ('search_description', models.TextField(blank=True, help_text='Optional. The short description displayed in search engine results.')),
            ],
            options={
                'verbose_name': 'Project Category',
                'verbose_name_plural': 'Project Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('file', models.FileField(upload_to='videos')),
            ],
            options={
                'verbose_name': 'Video',
                'verbose_name_plural': 'Videos',
            },
        ),
        migrations.CreateModel(
            name='ProjectPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('body', wagtail.fields.StreamField([('add_text', 3), ('image', 4), ('image_2_1', 5), ('video', 8), ('video_2_1', 9), ('card_head_2', 16), ('gallery', 19)], blank=True, block_lookup={0: ('wagtail.blocks.RichTextBlock', (), {'label': 'Heading', 'required': False}), 1: ('wagtail.blocks.RichTextBlock', (), {'label': 'Paragraph', 'required': False}), 2: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('left', 'Left'), ('center', 'Center'), ('right', 'Right')], 'label': 'Text Alignment'}), 3: ('wagtail.blocks.StructBlock', [[('heading', 0), ('paragraph', 1), ('text_align', 2)]], {'icon': 'doc-full', 'label': 'Add Text', 'template': 'blocks/add_text_block.html'}), 4: ('wagtail.images.blocks.ImageChooserBlock', (), {'icon': 'image', 'label': 'Image', 'template': 'blocks/image_block.html'}), 5: ('wagtail.images.blocks.ImageChooserBlock', (), {'icon': 'image', 'label': 'Image 2:1', 'template': 'blocks/image_2_1_block.html'}), 6: ('wagtail.snippets.blocks.SnippetChooserBlock', ('home.Video',), {}), 7: ('wagtail.blocks.CharBlock', (), {'label': 'Caption', 'required': False}), 8: ('wagtail.blocks.StructBlock', [[('video', 6), ('caption', 7)]], {'icon': 'media', 'label': 'Video', 'template': 'blocks/video_block.html'}), 9: ('wagtail.blocks.StructBlock', [[('video', 6), ('caption', 7)]], {'icon': 'media', 'label': 'Video 2:1', 'template': 'blocks/video_2_1_block.html'}), 10: ('wagtail.snippets.blocks.SnippetChooserBlock', ('home.Video',), {'icon': 'media', 'label': 'Video', 'required': True}), 11: ('wagtail.blocks.CharBlock', (), {'label': 'Project Name', 'required': True}), 12: ('wagtail.blocks.CharBlock', (), {'label': 'Year', 'required': False}), 13: ('wagtail.blocks.CharBlock', (), {'label': 'Industry', 'required': False}), 14: ('wagtail.blocks.CharBlock', (), {'label': 'Client Name', 'required': False}), 15: ('wagtail.blocks.URLBlock', (), {'label': 'Client URL (optional)', 'required': False}), 16: ('wagtail.blocks.StructBlock', [[('video', 10), ('project_name', 11), ('year', 12), ('industry', 13), ('client_name', 14), ('client_url', 15)]], {'icon': 'doc-full', 'label': 'Card Head 2', 'template': 'blocks/card_head_2_block.html'}), 17: ('wagtail.images.blocks.ImageChooserBlock', (), {'icon': 'image', 'label': 'Image'}), 18: ('wagtail.snippets.blocks.SnippetChooserBlock', ('home.Video',), {'icon': 'media', 'label': 'Video'}), 19: ('wagtail.blocks.StreamBlock', [[('image', 17), ('video', 18)]], {'icon': 'grip', 'label': 'Media Gallery (2 to 4 items)', 'max_num': 4, 'min_num': 2, 'template': 'blocks/mixed_gallery_block.html'})}, help_text='Основной контент страницы, собираемый из блоков.')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects', to='home.projectcategory')),
                ('thumbnail_image', models.ForeignKey(blank=True, help_text='Изображение для сетки (если не выбрано видео в Card Head 2).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
